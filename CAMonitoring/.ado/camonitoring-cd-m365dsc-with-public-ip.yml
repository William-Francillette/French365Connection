# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
- group: "CA Monitoring - Variables"
- group: "CA Monitoring - Keyvault"
- name: location 
  value: 'uksouth'
- name: rgTemplateFile
  value: 'CAMonitoring/Bicep/main.bicep'
- name: vmTemplateFile  
  value: 'CAMonitoring/Bicep/vm.bicep'
- name: azureserviceconnection
  value: 'F365C-ServiceConnection'
- name: kvname
  value: 'CAMonitoring-Keyvault'
- name: rgkvname
  value: 'F365C'
- name: resourcePath
  value: 'C:\DevOps\M365DSC\Export\AADConditionalAccess'
- name: resourcePrefix
  value: 'camonitoring'


pool:
  vmImage: windows-latest

steps:
- task: AzurePowerShell@5
  inputs:
    azureSubscription: '$(azureserviceconnection)'
    ScriptType: 'InlineScript'
    azurePowerShellVersion: LatestVersion
    Inline: |
      $rg = Get-AzResourceGroup -Name '$(resourcePrefix)-rg' -ErrorAction SilentlyContinue
      if ($null -ne $rg)
      {
        $rg | Remove-AzResourceGroup -Force
      }

- task: AzureResourceManagerTemplateDeployment@3
  displayName: Deploy Main Bicep
  inputs:
    deploymentScope: 'Subscription'
    deploymentMode: 'Incremental'
    azureResourceManagerConnection: '$(azureserviceconnection)'
    subscriptionId: '$(subscriptionid)'
    location: '$(location)'
    templateLocation: 'Linked artifact'
    csmFile: '$(rgTemplateFile)'
    overrideParameters: ' -resourcePrefix $(resourcePrefix) -location $(location) -spId $(serviceconnectionid)'

- task: AzureResourceManagerTemplateDeployment@3
  displayName: Deploy VM Bicep
  inputs:
    deploymentScope: 'Resource Group'
    deploymentMode: 'Incremental'
    azureResourceManagerConnection: '$(azureserviceconnection)'
    subscriptionId: '$(subscriptionid)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(resourcePrefix)-rg'
    location: '$(location)'
    templateLocation: 'Linked artifact'
    csmFile: '$(vmTemplateFile)'
    overrideParameters: ' -adminUsername "adminPipeline" -adminPassword $(adminPassword) -resourcePrefix $(resourcePrefix) -location $(location) -spId $(serviceconnectionid)'

- task: AzureFileCopy@5
  inputs:
    SourcePath: 'CAMonitoring\DSC\M365TenantConfig.ps1'
    azureSubscription: '$(azureserviceconnection)'
    Destination: 'AzureVMs'
    MachineNames: '$(resourcePrefix)-vm'
    storage: "$(resourcePrefix)sa"
    resourceGroup: "$(resourcePrefix)-rg"
    vmsAdminUserName: 'adminPipeline'
    vmsAdminPassword: '$(adminPassword)'
    TargetPath: '$(resourcePath)'
    CopyFilesInParallel: false
    skipCACheck: true
    enableCopyPrerequisites: true
    AdditionalArgumentsForVMCopy : '--log-level=INFO'
      
- task: AzurePowerShell@5
  inputs:
    azureSubscription: '$(azureserviceconnection)'
    ScriptType: 'InlineScript'
    azurePowerShellVersion: LatestVersion
    Inline: |
      Install-Module Az.Compute -force -confirm:$false
      Invoke-AzVmRunCommand `
      -ResourceGroupName "$(resourcePrefix)-rg" `
      -VMName "$(resourcePrefix)-vm" `
      -CommandId "RunPowerShellScript" `
      -ScriptPath "CAMonitoring\Scripts\installM365DSCModule.ps1"


- task: AzurePowerShell@5
  inputs:
    azureSubscription: '$(azureserviceconnection)'
    ScriptType: 'InlineScript'
    azurePowerShellVersion: LatestVersion
    Inline: | 
      Invoke-AzVmRunCommand `
      -ResourceGroupName "$(resourcePrefix)-rg" `
      -VMName "$(resourcePrefix)-vm" `
      -CommandId "RunPowerShellScript" `
      -ScriptPath "CAMonitoring\Scripts\configureDSC.ps1" `
      -Parameter @{'ResourcePath'='$(resourcePath)';'OrganizationName'='$(entraidtenant)'}